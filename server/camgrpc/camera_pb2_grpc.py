# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import camera_pb2 as camera__pb2


class CameraStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Stream = channel.unary_stream(
            '/camera.Camera/Stream',
            request_serializer=camera__pb2.Blank.SerializeToString,
            response_deserializer=camera__pb2.CameraResponse.FromString,
        )


class CameraServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Stream(self, request, context):
        """Server Streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Stream': grpc.unary_stream_rpc_method_handler(
            servicer.Stream,
            request_deserializer=camera__pb2.Blank.FromString,
            response_serializer=camera__pb2.CameraResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'camera.Camera', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Camera(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Stream(request,
               target,
               options=(),
               channel_credentials=None,
               call_credentials=None,
               insecure=False,
               compression=None,
               wait_for_ready=None,
               timeout=None,
               metadata=None):
        return grpc.experimental.unary_stream(request, target, '/camera.Camera/Stream',
                                              camera__pb2.Blank.SerializeToString,
                                              camera__pb2.CameraResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout,
                                              metadata)
